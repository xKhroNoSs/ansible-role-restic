---
- name: Ensure restic backup config directory is present
  ansible.builtin.file:
    path: "{{ restic_backup_configs_location }}"
    state: directory
    owner: "{{ restic_user }}"
    group: "{{ restic_user_group }}"
    mode: "{{ restic_backup_configs_location_perms }}"

- name: Ensure restic backup cache directory is present
  ansible.builtin.file:
    path: "{{ restic_backup_config_combined.RESTIC_CACHE_DIR }}"
    state: directory
    owner: "{{ restic_user }}"
    group: "{{ restic_user_group }}"
    mode: "{{ restic_backup_configs_location_perms }}"

- name: Copy files to backup
  ansible.builtin.copy:
    owner: "{{ restic_user }}"
    group: "{{ restic_user_group }}"
    src: "{{ restic_backup_filestobackup_src }}"
    dest: "{{ restic_backup_filestobackup_dst }}"
    mode: "{{ restic_backup_configs_perms }}"

- name: Systemd config
  block:
  - name: Ensure systemd config dir is present
    ansible.builtin.file:
      path: "{{ restic_backup_systemd_config_location }}.d"
      state: directory
      owner: "{{ restic_user }}"
      group: "{{ restic_user_group }}"
      mode: "{{ restic_backup_configs_location_perms }}"

  - name: Ensure systemd config dir is present
    ansible.builtin.file:
      path: "{{ restic_backup_systemd_config_location }}.d"
      state: directory
      owner: "{{ restic_user }}"
      group: "{{ restic_user_group }}"
      mode: "{{ restic_backup_configs_location_perms }}"
    tags:
      - never
      - repo_init

  - name: Create env files backup config
    ansible.builtin.copy:
      owner: "{{ restic_user }}"
      group: "{{ restic_user_group }}"
      dest: "{{ restic_backup_config_location | default(restic_backup_systemd_config_location) }}.d/{{ restic_backup_name }}.env"
      mode: "{{ restic_backup_configs_perms }}"
      content: |
        {% for param, value in restic_backup_config_combined.items() %}
        {{ param }}="{{ value }}"
        {% endfor %}

  - name: Define restic binary location  
    ansible.builtin.set_fact:
      restic_install_binary_location: /usr/bin
    when:
      - not restic_install_binary

  - name: Create systemd service file 
    ansible.builtin.template:
      owner: "{{ restic_user }}"
      group: "{{ restic_user_group }}"
      src: templates/systemd.service.j2
      dest: "{{ restic_backup_config_location | default(restic_backup_systemd_config_location) }}.service"
      mode: "{{ restic_backup_configs_perms }}"
    notify: systemd_daemon_reload

  - name: Create systemd timer file
    ansible.builtin.template:
      owner: "{{ restic_user }}"
      group: "{{ restic_user_group }}"
      src: templates/systemd.timer.j2
      dest: "{{ restic_backup_config_location | default(restic_backup_systemd_config_location) }}.timer"
      mode: "{{ restic_backup_configs_perms }}"
    notify: systemd_daemon_reload

  - name: Enable systemd timer file
    ansible.builtin.systemd:
      name: "{{ restic_backup_name }}.timer"
      state: started
      enabled: yes
  when:
    - restic_backup_systemd
    - not restic_backup_cron

- name: Ensure no repo are already initalized
  become_user: "{{ restic_user }}"
  ansible.builtin.shell: 
    cmd: |
      restic snapshots
  environment: "{{ restic_backup_config_combined }}"
  register: repo_init_check
  ignore_errors: true
  tags:
    - never
    - repo_init

- name: Init repo
  become_user: "{{ restic_user }}"
  ansible.builtin.shell: 
    cmd: |
      restic init 
  environment: "{{ restic_backup_config_combined }}"
  when:
    - repo_init_check.rc != 0
  tags:
    - never
    - repo_init

